{"version":3,"sources":["webpack:///webpack/bootstrap 84a8580fbf1ef68482e5","webpack:///./src/app.js","webpack:///./src/main/org-chart.js","webpack:///./src/main/model/index.js","webpack:///./src/main/model/user-card.js","webpack:///./src/main/model/user-info.js","webpack:///./src/main/model/user-util.js","webpack:///./src/main/dom/index.js","webpack:///./src/main/dom/dom-util.js","webpack:///./src/main/action/index.js","webpack:///./src/main/action/dom-actions.js","webpack:///./src/main/action/user-actions.js","webpack:///./src/main/dom/card-box-dom.js","webpack:///./src/main/dom/base-dom.js","webpack:///./src/main/dom/card-element-dom.js","webpack:///./src/main/dom/card-container-dom.js"],"names":["orgChartDOM","document","getElementById","Storage","orgChartRawData","sessionStorage","rawData","undefined","appendChild","OrgChart","JSON","parse","render","fetch","then","res","json","data","stringify","catch","innerHTML","err","requiredId","rootCard","createRootCard","cards","buildCardTree","UserCard","mapRawDataToUserCard","find","user","superiorId","id","card","push","addSubCards","filter","map","getSubCards","forEach","subCard","addParent","rootContainer","className","rootDOM","CardElementDOM","CardBoxDOM","subCardsNode","buildNodeByCard","length","CardContainerDOM","subRootPathContainer","familyPath","pop","username","createBreadscumbs","createRootNode","userInfo","userCardInfo","UserInfo","subCards","parent","addSubCard","firstName","lastName","title","department","project","avatar","employeeId","value","getDepartments","userData","departmentSet","Set","add","Array","from","getNewId","Ids","Math","max","findFamilyById","cardId","familyArr","currentUser","buildFamily","cardSuperiorId","createContainerByTagName","createElement","tagName","createCommonContainer","divDOM","createIcon","iconDOM","setAttribute","createCardIcons","plusIcon","minusIcon","editIcon","createPeerCardIcon","createSubCardIcon","deleteIcon","createCardInfoNodes","usernameDOM","createListElement","departmentDOM","employeeIdDOM","prefix","textContent","labelClassName","labelFor","isInput","elementDOM","label","input","createDepartmentList","departmentName","selectDOM","departments","optionDOM","handleNodeToggle","cardNode","isRelease","childNodes","lastChild","style","display","handleDragEnd","event","cardToBeDragged","isOver","preventDefault","target","contains","border","createPath","pathDOM","addEventListener","DOMActions","changeRootCard","infoNode","avatarNode","avatarFirstChild","firstChild","avatarLastChild","removeAttribute","click","e","files","URL","createObjectURL","childrenNode","getFamilyNode","cardContainer","parentNode","nextCardElement","nextSiblingNode","createNewUserCardDOM","newUserCard","newUserCardDOM","insertBefore","newData","alreadyHasChild","cardElement","currentNode","subCardsContainer","newUserCardContainerDOM","removeChild","draggedCard","cardBox","window","alert","newSubsCardContainer","valueChanged","Map","set","parseInt","nextElementSibling","isPeerCard","newUserId","newParentId","setParentId","toString","addNewCard","getFirstName","getLastName","getTitle","getDepartment","getProject","getAvatar","getEmployeeId","getSuperiorId","deleteCardByCardId","subCardsTobeDeleted","splice","findIndex","updateData","updateInfoCard","valueToBeChanged","key","split","containerDOM","domActions","buildAvatarNode","buildInfoNode","actionNode","buildActionNode","toggleNode","buildToggleNode","backgroundColor","body","storeInformation","activateDnD","getUsername","editCardInfo","addPeerCard","confirm","deleteCard","dataTransfer","setData","getData","dropCard","infoChangedByName","childNode","getAttribute","size","avaContainer","src","button","BaseDOM","elementContentDOM","subCardContainerDOM","cardElementDOMs"],"mappings":"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","file":"app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 84a8580fbf1ef68482e5","import OrgChart from './main/org-chart'\r\n\r\nlet orgChartDOM = document.getElementById('orgChart')\r\n\r\nif (typeof (Storage) !== 'undefined') {\r\n  let orgChartRawData = sessionStorage.rawData\r\n\r\n  if (orgChartRawData !== undefined) {\r\n    orgChartDOM.appendChild((new OrgChart(JSON.parse(orgChartRawData))).render())\r\n  } else {\r\n    fetch('./data/contacts.json')\r\n      .then((res) => {\r\n        res.json()\r\n          .then((data) => {\r\n            sessionStorage.rawData = JSON.stringify(data)\r\n            orgChartDOM.appendChild((new OrgChart(data).render()))\r\n          })\r\n      })\r\n      .catch(err => orgChartDOM.innerHTML = `Your browser does not support Fetch API: ${err}`)\r\n  }\r\n} else {\r\n  orgChartDOM.innerHTML = 'Your browser does not support session Storage'\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app.js","import { UserCard, findFamilyById } from './model'\r\nimport {\r\n  CardContainerDOM,\r\n  CardElementDOM,\r\n  CardBoxDOM,\r\n  createContainerByTagName,\r\n  createPath\r\n} from './dom'\r\n\r\nexport default class OrgChart {\r\n\r\n  constructor(data, requiredId = null) {\r\n    this.rawData = data\r\n    this.rootCard = this.createRootCard(requiredId)\r\n    this.cards = []\r\n    this.buildCardTree(this.rootCard, this.cards)\r\n  }\r\n\r\n  createRootCard(requiredId) {\r\n    if (requiredId === null) {\r\n      return UserCard.mapRawDataToUserCard(this.rawData.find(user => user.superiorId === undefined))\r\n    }\r\n    return UserCard.mapRawDataToUserCard(this.rawData.find(user => user.id === requiredId))\r\n  }\r\n\r\n  buildCardTree(card, cards) {\r\n    if (card === undefined) {\r\n      return\r\n    }\r\n\r\n    cards.push(card)\r\n    card.addSubCards(this.rawData\r\n      .filter(user => user.superiorId === card.id)\r\n      .map(user => UserCard.mapRawDataToUserCard(user)))\r\n\r\n    card.getSubCards()\r\n      .forEach((subCard) => {\r\n        subCard.addParent(card)\r\n        this.buildCardTree(subCard, cards)\r\n      })\r\n  }\r\n\r\n  createRootNode() {\r\n    if (this.rootCard === undefined) {\r\n      return\r\n    }\r\n\r\n    let rootContainer = createContainerByTagName('ul')\r\n    rootContainer.className = 'org-chart__card-container'\r\n    let rootDOM = new CardElementDOM(this.rootCard.id, new CardBoxDOM(this.rootCard))\r\n    let subCardsNode = this.buildNodeByCard(this.rootCard)\r\n\r\n    if (subCardsNode !== undefined) {\r\n      rootDOM.render().appendChild(subCardsNode.render())\r\n    }\r\n\r\n    rootContainer.appendChild(rootDOM.render())\r\n    return rootContainer\r\n  }\r\n\r\n  buildNodeByCard(card) {\r\n    if (card.getSubCards().length === 0) {\r\n      return\r\n    }\r\n\r\n    return new CardContainerDOM(card.getSubCards()\r\n      .map(subCard => new CardElementDOM(subCard.id, new CardBoxDOM(subCard), this.buildNodeByCard(subCard))))\r\n  }\r\n\r\n  createBreadscumbs() {\r\n    let subRootPathContainer = document.getElementById('sub-root')\r\n    subRootPathContainer.innerHTML = ''\r\n    let familyPath = findFamilyById(this.rootCard.id)\r\n\r\n    while (familyPath.length !== 0) {\r\n      let user = familyPath.pop()\r\n      subRootPathContainer.appendChild(createPath(user.id, ` / ${user.username}`))\r\n    }\r\n  }\r\n\r\n  render() {\r\n    this.createBreadscumbs()\r\n    return this.createRootNode()\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/main/org-chart.js","export * from './user-card'\r\nexport * from './user-info'\r\nexport * from './user-util'\n\n\n// WEBPACK FOOTER //\n// ./src/main/model/index.js","import { UserInfo } from './index'\r\n\r\nexport class UserCard {\r\n\r\n  constructor(id, ...userInfo) {\r\n    this.userCardInfo = new UserInfo(...userInfo)\r\n    this.id = id\r\n    this.subCards = []\r\n  }\r\n\r\n  addParent(parent) {\r\n    this.parent = parent\r\n  }\r\n\r\n  getParent() {\r\n    return this.parent\r\n  }\r\n\r\n  addSubCard(subCard) {\r\n    this.subCards.push(subCard)\r\n  }\r\n\r\n  addSubCards(subCards) {\r\n    subCards.forEach(subCard => this.addSubCard(subCard))\r\n  }\r\n\r\n  getSubCards() {\r\n    return this.subCards\r\n  }\r\n\r\n  static mapRawDataToUserCard(user) {\r\n    return new UserCard(user.id, user.firstName, user.lastName, user.title, user.department, user.project,\r\n      user.avatar, user.employeeId)\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/main/model/user-card.js","export class UserInfo {\r\n\r\n  constructor(firstName = '.........', lastName = '', title = '.........', department = '.........', project = '',\r\n              avatar = 'avatar.png', employeeId = '.........') {\r\n    this.firstName = firstName\r\n    this.lastName = lastName\r\n    this.title = title\r\n    this.department = department\r\n    this.project = project\r\n    this.avatar = avatar\r\n    this.employeeId = employeeId\r\n  }\r\n\r\n  getFirstName() {\r\n    return this.firstName\r\n  }\r\n\r\n  getLastName() {\r\n    return this.lastName\r\n  }\r\n\r\n  getTitle() {\r\n    return this.title\r\n  }\r\n\r\n  getDepartment() {\r\n    return this.department\r\n  }\r\n\r\n  getProject() {\r\n    return this.project\r\n  }\r\n\r\n  getAvatar() {\r\n    return this.avatar\r\n  }\r\n\r\n  getEmployeeId() {\r\n    return this.employeeId\r\n  }\r\n\r\n  getSuperiorId() {\r\n    return this.superiorId\r\n  }\r\n\r\n  getParentId() {\r\n    return this.superiorId\r\n  }\r\n\r\n  setParentId(value) {\r\n    this.superiorId = value\r\n  }\r\n\r\n  getUsername() {\r\n    return `${this.firstName} ${this.lastName}`\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/main/model/user-info.js","export const getDepartments = (userData = JSON.parse(sessionStorage.rawData)) => {\r\n  let departmentSet = new Set()\r\n  userData.forEach(user => departmentSet.add(user.department))\r\n  return Array.from(departmentSet)\r\n}\r\n\r\nexport const getNewId = (userData = JSON.parse(sessionStorage.rawData)) => {\r\n  let Ids = userData.map(user => user.id)\r\n  return Math.max(...Ids) + 1\r\n}\r\n\r\nexport const findFamilyById = (cardId, userData = JSON.parse(sessionStorage.rawData)) => {\r\n  let familyArr = []\r\n  let currentUser = userData.find(user => user.id === cardId)\r\n  familyArr.push({\r\n    id: currentUser.id,\r\n    username: `${currentUser.firstName} ${currentUser.lastName}`\r\n  })\r\n\r\n  if (currentUser.superiorId === undefined) {\r\n    return familyArr\r\n  }\r\n  const buildFamily = (cardSuperiorId) => {\r\n    let parent = userData.find(user => user.id === cardSuperiorId)\r\n    if (parent === undefined) {\r\n      return\r\n    }\r\n\r\n    familyArr.push({\r\n      id: parent.id,\r\n      username: `${parent.firstName} ${parent.lastName}`\r\n    })\r\n    buildFamily(parent.superiorId)\r\n  }\r\n\r\n  buildFamily(currentUser.superiorId)\r\n  return familyArr\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/main/model/user-util.js","export * from './dom-util'\r\nexport * from './card-box-dom'\r\nexport * from './card-element-dom'\r\nexport * from './card-container-dom'\n\n\n// WEBPACK FOOTER //\n// ./src/main/dom/index.js","import { getDepartments } from '../model'\r\nimport { DOMActions } from '../action'\r\n\r\nexport const createContainerByTagName = tagName => document.createElement(tagName)\r\n\r\nexport const createCommonContainer = (className = 'null') => {\r\n  let divDOM = createContainerByTagName('div')\r\n\r\n  if (className !== 'null') {\r\n    divDOM.className = className\r\n  }\r\n  return divDOM\r\n}\r\n\r\nexport const createIcon = (className = 'null') => {\r\n  let iconDOM = document.createElement('span')\r\n  iconDOM.className = className\r\n  iconDOM.setAttribute('aria-hidden', 'true')\r\n\r\n  return iconDOM\r\n}\r\n\r\nexport const createCardIcons = () => {\r\n  return {\r\n    plusIcon: createIcon('fa fa-plus-circle'),\r\n    minusIcon: createIcon('fa fa-minus-circle'),\r\n    editIcon: createIcon('fa fa-pencil-square-o'),\r\n    createPeerCardIcon: createIcon('fa fa-arrow-circle-right'),\r\n    createSubCardIcon: createIcon('fa fa-arrow-circle-down'),\r\n    deleteIcon: createIcon('fa fa-trash-o')\r\n  }\r\n}\r\n\r\nexport const createCardInfoNodes = (username, department, employeeId) => {\r\n  let usernameDOM = createListElement('info__username', username, 'username')\r\n  let departmentDOM = createListElement(\"info__department\", department, 'department', false)\r\n  let employeeIdDOM = createListElement('info__employeeId', employeeId, 'employeeId')\r\n  let prefix = document.createElement('i')\r\n\r\n  employeeIdDOM.setAttribute('href', '#')\r\n  prefix.className = 'kms-prefix'\r\n  prefix.textContent = '@gmail.com'\r\n\r\n  return {\r\n    usernameDOM,\r\n    departmentDOM,\r\n    employeeIdDOM,\r\n    prefix,\r\n  }\r\n}\r\n\r\nexport const createListElement = (labelClassName, value, labelFor, isInput = true) => {\r\n  let elementDOM = document.createElement('li')\r\n\r\n  let label = document.createElement('label')\r\n  label.setAttribute('for', labelFor)\r\n  label.className = labelClassName\r\n  label.innerHTML = value\r\n\r\n  let input\r\n  if (isInput) {\r\n    input = document.createElement('input')\r\n    input.setAttribute('value', value)\r\n  } else {\r\n    input = createDepartmentList(value)\r\n  }\r\n  input.setAttribute('id', labelFor)\r\n\r\n  elementDOM.appendChild(label)\r\n  elementDOM.appendChild(input)\r\n  return elementDOM\r\n}\r\n\r\nexport const createDepartmentList = (departmentName) => {\r\n  let selectDOM = document.createElement('select')\r\n  let departments = getDepartments()\r\n\r\n  departments.forEach((department) => {\r\n    let optionDOM = document.createElement('option')\r\n    optionDOM.setAttribute('value', department)\r\n    optionDOM.textContent = department\r\n\r\n    if (department === departmentName) {\r\n      optionDOM.setAttribute('selected', 'selected')\r\n    }\r\n    selectDOM.appendChild(optionDOM)\r\n  })\r\n\r\n  return selectDOM\r\n}\r\n\r\nexport const handleNodeToggle = (cardNode, minusIcon, plusIcon, isRelease = true) => {\r\n  if (cardNode.childNodes.length === 1) {\r\n    return\r\n  }\r\n\r\n  cardNode.lastChild.style.display = isRelease ? 'flex' : 'none'\r\n  minusIcon.style.display = isRelease ? 'initial' : 'none'\r\n  plusIcon.style.display = isRelease ? 'none' : 'initial'\r\n}\r\n\r\nexport const handleDragEnd = (event, cardToBeDragged, isOver = true) => {\r\n  event.preventDefault()\r\n  if (event.target === cardToBeDragged || cardToBeDragged.contains(event.target)) {\r\n    cardToBeDragged.style.border = '2px solid #b5b5b5'\r\n    document.getElementById('msg').innerHTML = isOver ? '' : 'Drop in a card that you want to be its superior card.'\r\n  }\r\n}\r\n\r\nexport const createPath = (id, username) => {\r\n  let pathDOM = document.createElement('a')\r\n  pathDOM.className = 'path'\r\n  pathDOM.textContent = username\r\n\r\n  pathDOM.addEventListener('click', () => (new DOMActions(id).changeRootCard()))\r\n  return pathDOM\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/main/dom/dom-util.js","export * from './dom-actions'\r\nexport * from './user-actions'\n\n\n// WEBPACK FOOTER //\n// ./src/main/action/index.js","import OrgChart from '../org-chart'\r\nimport { UserCard, getNewId } from '../model'\r\nimport { CardBoxDOM, CardElementDOM, CardContainerDOM } from '../dom'\r\nimport {\r\n  addNewCard,\r\n  deleteCardByCardId,\r\n  updateInfoCard,\r\n  updateData\r\n} from './index'\r\n\r\nexport class DOMActions {\r\n\r\n  constructor(cardId) {\r\n    this.cardId = cardId\r\n  }\r\n\r\n  editCardInfo(infoNode, avatarNode) {\r\n    let { firstChild: avatarFirstChild, lastChild: avatarLastChild } = avatarNode\r\n\r\n    avatarLastChild.removeAttribute('disabled')\r\n    avatarFirstChild.style.border = '1px dashed blue'\r\n    avatarFirstChild.addEventListener('click', () => {\r\n      avatarLastChild.click()\r\n      avatarLastChild.addEventListener('change', (e) => {\r\n        e.preventDefault()\r\n        if (e.target.files[0]) {\r\n          avatarFirstChild.setAttribute('src', URL.createObjectURL(e.target.files[0]))\r\n        }\r\n      })\r\n    })\r\n\r\n    Array.from(infoNode.childNodes)\r\n      .forEach(childrenNode => {\r\n        if (childrenNode === infoNode.lastChild) {\r\n          return\r\n        }\r\n        childrenNode.firstChild.style.display = 'none'\r\n        childrenNode.lastChild.style.display = 'initial'\r\n      })\r\n  }\r\n\r\n  addPeerCard() {\r\n    let { parentNode: cardContainer, nextSiblingNode: nextCardElement } = this.getFamilyNode()\r\n    let { newUserCard, newUserCardDOM } = this.createNewUserCardDOM()\r\n\r\n    nextCardElement === null ? cardContainer.appendChild(newUserCardDOM.render())\r\n      : cardContainer.insertBefore(newUserCardDOM.render(), nextCardElement)\r\n\r\n    let newData = addNewCard(newUserCard)\r\n    updateData(newData)\r\n  }\r\n\r\n  addSubCard(alreadyHasChild) {\r\n    let { currentNode: cardElement, lastChild: subCardsContainer } = this.getFamilyNode()\r\n    let { newUserCard, newUserCardDOM, newUserCardContainerDOM } = this.createNewUserCardDOM(false)\r\n\r\n    alreadyHasChild ? subCardsContainer.appendChild(newUserCardDOM.render())\r\n      : cardElement.appendChild(newUserCardContainerDOM.render())\r\n\r\n    let newData = addNewCard(newUserCard)\r\n    updateData(newData)\r\n  }\r\n\r\n  deleteCard() {\r\n    let { currentNode: cardElement, parentNode: cardContainer } = this.getFamilyNode()\r\n    cardContainer.removeChild(cardElement)\r\n    deleteCardByCardId(this.cardId)\r\n  }\r\n\r\n  dropCard(draggedCard, alreadyHasChild) {\r\n    let { currentNode: cardElement, firstChild: cardBox, lastChild: subCardsContainer } = this.getFamilyNode()\r\n\r\n    cardBox.style.border = '2px solid #b5b5b5'\r\n    if (draggedCard.contains(cardBox)) {\r\n      window.alert('ERROR!!! A subordinate card cannot be a superior card of its own parent card.')\r\n      return\r\n    }\r\n\r\n    if (alreadyHasChild) {\r\n      subCardsContainer.appendChild(draggedCard)\r\n    } else {\r\n      let newSubsCardContainer = document.createElement('ul')\r\n      newSubsCardContainer.className = 'org-chart__card-container'\r\n      newSubsCardContainer.appendChild(draggedCard)\r\n      cardElement.appendChild(newSubsCardContainer)\r\n    }\r\n\r\n    let valueChanged = new Map()\r\n    valueChanged.set('superiorId', this.cardId)\r\n    let newData = updateInfoCard(parseInt(draggedCard.id), valueChanged)\r\n    updateData(newData)\r\n  }\r\n\r\n  changeRootCard() {\r\n    let orgChartDOM = document.getElementById('orgChart')\r\n    orgChartDOM.innerHTML = ''\r\n    orgChartDOM.appendChild((new OrgChart(JSON.parse(sessionStorage.rawData), this.cardId).render()))\r\n  }\r\n\r\n  getFamilyNode() {\r\n    let currentNode = document.getElementById(this.cardId)\r\n\r\n    return {\r\n      currentNode,\r\n      parentNode: currentNode.parentNode,\r\n      nextSiblingNode: currentNode.nextElementSibling,\r\n      firstChild: currentNode.firstChild,\r\n      lastChild: currentNode.lastChild\r\n    }\r\n  }\r\n\r\n  createNewUserCardDOM(isPeerCard = true) {\r\n    let { parentNode } = this.getFamilyNode()\r\n\r\n    let newUserId = getNewId()\r\n    let newUserCard = new UserCard(newUserId)\r\n    let newParentId = isPeerCard ? parentNode.parentNode.id : this.cardId\r\n\r\n    newUserCard.addParent({ id: newParentId })\r\n    newUserCard.userCardInfo.setParentId(newParentId)\r\n    let newUserCardDOM = new CardElementDOM(newUserId.toString(), new CardBoxDOM(newUserCard))\r\n\r\n    return {\r\n      newUserCard,\r\n      newUserCardDOM,\r\n      newUserCardContainerDOM: new CardContainerDOM([newUserCardDOM])\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main/action/dom-actions.js","export const addNewCard = (card, userData = JSON.parse(sessionStorage.rawData)) => {\r\n  userData.push(\r\n    {\r\n      firstName: card.userCardInfo.getFirstName(),\r\n      lastName: card.userCardInfo.getLastName(),\r\n      title: card.userCardInfo.getTitle(),\r\n      department: card.userCardInfo.getDepartment(),\r\n      project: card.userCardInfo.getProject(),\r\n      avatar: card.userCardInfo.getAvatar(),\r\n      employeeId: card.userCardInfo.getEmployeeId(),\r\n      superiorId: parseInt(card.userCardInfo.getSuperiorId()),\r\n      id: parseInt(card.id)\r\n    }\r\n  )\r\n\r\n  return userData\r\n}\r\n\r\nexport const deleteCardByCardId = (cardId, userData = JSON.parse(sessionStorage.rawData)) => {\r\n  let subCardsTobeDeleted = userData.filter(user => user.superiorId === cardId)\r\n\r\n  userData.splice(userData.findIndex(user => user.id === cardId), 1)\r\n  updateData(userData)\r\n\r\n  if (subCardsTobeDeleted.length === 0) {\r\n    return\r\n  }\r\n  subCardsTobeDeleted.forEach(user => deleteCardByCardId(user.id))\r\n}\r\n\r\nexport const updateInfoCard = (cardId, valueToBeChanged, userData = JSON.parse(sessionStorage.rawData)) => {\r\n\r\n  for (let [key, value] of valueToBeChanged) {\r\n    if (key === 'username') {\r\n      let [firstName, ...lastName] = value.split(' ')\r\n      userData.find(user => user.id === cardId)['firstName'] = firstName\r\n      userData.find(user => user.id === cardId)['lastName'] = lastName\r\n    } else {\r\n      userData.find(user => user.id === cardId)[key] = value\r\n    }\r\n  }\r\n\r\n  return userData\r\n}\r\n\r\nexport const updateData = newData => sessionStorage.rawData = JSON.stringify(newData)\n\n\n// WEBPACK FOOTER //\n// ./src/main/action/user-actions.js","import { DOMActions, updateInfoCard, updateData } from '../action'\r\nimport BaseDOM from './base-dom'\r\nimport {\r\n  createContainerByTagName,\r\n  createCommonContainer,\r\n  createCardIcons,\r\n  createCardInfoNodes,\r\n  handleNodeToggle,\r\n  handleDragEnd\r\n} from './index'\r\n\r\nexport class CardBoxDOM extends BaseDOM {\r\n\r\n  constructor(card) {\r\n    super(createContainerByTagName('section'))\r\n    this.containerDOM.className = 'card'\r\n    this.card = card\r\n    this.domActions = new DOMActions(this.card.id)\r\n    this.childrenNode = {\r\n      avatarNode: CardBoxDOM.buildAvatarNode(),\r\n      infoNode: this.buildInfoNode(),\r\n      actionNode: this.buildActionNode(),\r\n      toggleNode: this.buildToggleNode()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let { avatarNode, infoNode, actionNode, toggleNode } = this.childrenNode\r\n    this.containerDOM.appendChild(avatarNode)\r\n    this.containerDOM.appendChild(infoNode)\r\n    this.containerDOM.appendChild(actionNode)\r\n    this.containerDOM.appendChild(toggleNode)\r\n\r\n    this.containerDOM.addEventListener('click', () => {\r\n      this.containerDOM.style.backgroundColor = '#f4f2f2'\r\n      actionNode.style.display = 'initial'\r\n\r\n      document.body.addEventListener('click', e => this.storeInformation(e))\r\n    })\r\n    this.containerDOM.addEventListener('dblclick', () => this.domActions.changeRootCard())\r\n    this.activateDnD()\r\n\r\n    return this.containerDOM\r\n  }\r\n\r\n  buildInfoNode() {\r\n    let infoNode = createContainerByTagName('ul')\r\n    let { usernameDOM, departmentDOM, employeeIdDOM, prefix } = createCardInfoNodes(this.card.userCardInfo.getUsername(),\r\n      this.card.userCardInfo.getDepartment(), this.card.userCardInfo.getEmployeeId())\r\n\r\n    infoNode.className = 'card__info'\r\n    infoNode.appendChild(usernameDOM)\r\n    infoNode.appendChild(departmentDOM)\r\n    infoNode.appendChild(employeeIdDOM)\r\n    infoNode.appendChild(prefix)\r\n\r\n    return infoNode\r\n  }\r\n\r\n  buildActionNode() {\r\n    let actionNode = createCommonContainer('card__action')\r\n    let { editIcon, createPeerCardIcon, createSubCardIcon, deleteIcon } = createCardIcons()\r\n\r\n    editIcon.addEventListener('click', () => this.domActions.editCardInfo(this.childrenNode.infoNode,\r\n      this.childrenNode.avatarNode))\r\n    createPeerCardIcon.addEventListener('click', () => this.domActions.addPeerCard())\r\n    createSubCardIcon.addEventListener('click', () => this.domActions.addSubCard(this.card.getSubCards().length > 0))\r\n    deleteIcon.addEventListener('click', () => {\r\n      let confirm = window.confirm('Are your sure to delete this card ?')\r\n      if (confirm === true) {\r\n        this.domActions.deleteCard()\r\n      }\r\n    })\r\n\r\n    actionNode.appendChild(editIcon)\r\n    actionNode.appendChild(createSubCardIcon)\r\n\r\n    if (this.card.parent !== undefined) {\r\n      actionNode.appendChild(createPeerCardIcon)\r\n      actionNode.appendChild(deleteIcon)\r\n    }\r\n\r\n    return actionNode\r\n  }\r\n\r\n  buildToggleNode() {\r\n    let toggleNode = createCommonContainer('card__toggle')\r\n    let { plusIcon, minusIcon } = createCardIcons()\r\n\r\n    minusIcon.addEventListener('click', () => handleNodeToggle(this.containerDOM.parentNode, minusIcon, plusIcon, false))\r\n    plusIcon.addEventListener('click', () => handleNodeToggle(this.containerDOM.parentNode, minusIcon, plusIcon))\r\n    this.card.getSubCards().length === 0 ? minusIcon.style.display = 'none' : plusIcon.style.display = 'none'\r\n\r\n    toggleNode.appendChild(plusIcon)\r\n    toggleNode.appendChild(minusIcon)\r\n    return toggleNode\r\n  }\r\n\r\n  activateDnD() {\r\n    this.containerDOM.setAttribute('draggable', 'true')\r\n    this.containerDOM.addEventListener('drag', () => this.containerDOM.style.border = '2px dashed blue')\r\n    this.containerDOM.addEventListener('dragstart', (e) => e.dataTransfer.setData('id', this.card.id))\r\n    this.containerDOM.addEventListener('dragleave', (e) => handleDragEnd(e, this.containerDOM, false))\r\n    this.containerDOM.addEventListener('dragend', (e) => handleDragEnd(e, this.containerDOM))\r\n    this.containerDOM.addEventListener('dragover', (e) => {\r\n      e.preventDefault()\r\n      if (e.target === this.containerDOM || this.containerDOM.contains(e.target)) {\r\n        this.containerDOM.style.border = '2px dashed blue'\r\n      }\r\n    })\r\n\r\n    this.containerDOM.addEventListener('drop', (e) => {\r\n      e.preventDefault()\r\n      let cardId = e.dataTransfer.getData('id')\r\n      let draggedCard = document.getElementById(cardId)\r\n\r\n      if (cardId === this.card.id.toString()) {\r\n        return\r\n      }\r\n\r\n      this.domActions.dropCard(draggedCard, this.card.getSubCards().length > 0)\r\n      document.getElementById('msg').innerHTML = ''\r\n    })\r\n  }\r\n\r\n  static buildAvatarNode() {\r\n    let avaContainer = createCommonContainer('card__avatar')\r\n\r\n    let avatar = document.createElement('img')\r\n    avatar.src = 'images/avatar.png'\r\n    avaContainer.appendChild(avatar)\r\n\r\n    let button = document.createElement('input')\r\n    button.setAttribute('type', 'file')\r\n    button.className = 'button_change-avatar'\r\n    button.setAttribute('disabled', 'disabled')\r\n\r\n    avaContainer.appendChild(button)\r\n    return avaContainer\r\n  }\r\n\r\n  storeInformation(e) {\r\n    let { avatarNode, infoNode, actionNode, toggleNode } = this.childrenNode\r\n\r\n    if (toggleNode.contains(e.target) || !this.containerDOM.contains(e.target)) {\r\n      let infoChangedByName = new Map()\r\n      this.containerDOM.style.backgroundColor = 'white'\r\n      actionNode.style.display = 'none'\r\n      avatarNode.firstChild.style.border = '1px solid black'\r\n      avatarNode.lastChild.setAttribute('disabled', 'disabled')\r\n\r\n      Array.from(infoNode.childNodes)\r\n        .forEach(childNode => {\r\n          if (childNode === infoNode.lastChild) {\r\n            return\r\n          }\r\n          let { firstChild: label, lastChild: input } = childNode\r\n          label.style.display = 'initial'\r\n          input.style.display = 'none'\r\n\r\n          if (label.textContent !== input.value) {\r\n            label.innerHTML = input.value\r\n            infoChangedByName.set(label.getAttribute('for'), input.value)\r\n          }\r\n        })\r\n\r\n      if (infoChangedByName.size !== 0) {\r\n        let newData = updateInfoCard(this.card.id, infoChangedByName)\r\n        updateData(newData)\r\n      }\r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/main/dom/card-box-dom.js","export default class BaseDOM {\r\n\r\n  constructor(containerDOM) {\r\n    this.containerDOM = containerDOM\r\n  }\r\n\r\n  render() {\r\n    return this.containerDOM\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/main/dom/base-dom.js","import { createContainerByTagName } from './index'\r\nimport BaseDOM from './base-dom'\r\n\r\nexport class CardElementDOM extends BaseDOM {\r\n\r\n  constructor(id, elementContentDOM, subCardContainerDOM) {\r\n    super(createContainerByTagName('li'))\r\n\r\n    this.containerDOM.className = 'org-chart__card-element'\r\n    this.containerDOM.id = id\r\n    this.containerDOM.appendChild(elementContentDOM.render())\r\n\r\n    if (subCardContainerDOM !== undefined) {\r\n      this.containerDOM.appendChild(subCardContainerDOM.render())\r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/main/dom/card-element-dom.js","import BaseDOM from './base-dom'\r\nimport { createContainerByTagName } from './index'\r\n\r\nexport class CardContainerDOM extends BaseDOM {\r\n\r\n  constructor(cardElementDOMs = []) {\r\n    super(createContainerByTagName('ul'))\r\n\r\n    this.containerDOM.className = 'org-chart__card-container'\r\n    this.cardElementDOMs = cardElementDOMs\r\n    this.cardElementDOMs.forEach(cardElementDOMs => this.containerDOM.appendChild(cardElementDOMs.render()))\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/main/dom/card-container-dom.js"],"sourceRoot":""}